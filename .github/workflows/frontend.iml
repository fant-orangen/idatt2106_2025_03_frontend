# This workflow will do a clean installation of node dependencies, cache/restore them,
# build the source code and run tests across different versions of node.
# It now also starts the backend before Cypress E2E tests.

name: Frontend CI

on:
  push:
    branches: [ "dev", "main" ]
    paths: [ "frontend/**", ".github/workflows/frontend.yml" ]
  pull_request:
    branches: [ "dev", "main" ]
    paths: [ "frontend/**", ".github/workflows/frontend.yml" ]

defaults:
  run:
    working-directory: ./frontend

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x, 20.x, 22.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - run: npm ci
      - run: npm run build --if-present
      - run: npm run test:unit

      # ⬇️ Set up Java for backend
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # ⬇️ Start backend server in background
      - name: Start backend
        run: mvn spring-boot:run &
        working-directory: ./backend

      # ⬇️ Wait until backend is up and responding
      - name: Wait for backend to start
        run: |
          n=0
          until curl -s http://localhost:8080/actuator/health | grep '"status":"UP"' || [ $n -ge 30 ]; do
            echo "Waiting for backend..."
            n=$((n+1))
            sleep 5
          done

      # ⬇️ Run Cypress E2E tests after backend is ready
      - run: npm run test:e2e
